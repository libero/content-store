version: '3.4'

services:
    db:
        image: postgres:11.2-alpine
    s3:
        image: minio/minio:RELEASE.2019-05-02T19-07-09Z
        environment:
            MINIO_ACCESS_KEY: &S3Key AKIAIOSFODNN7EXAMPLE
            MINIO_SECRET_KEY: &S3Secret wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        command: server /app
        ports:
            - 8081:9000
    s3-bucket:
        image: minio/mc:RELEASE.2019-05-01T23-27-44Z
        entrypoint: sh
        command: >
            -c '
                while ! nc s3 9000; do sleep 1; done
                /usr/bin/mc config host add minio http://s3:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
                /usr/bin/mc mb minio/bucket;
                /usr/bin/mc policy download minio/bucket;
            '
        depends_on:
            - s3
    app:
        build:
            context: .
            target: prod
        environment:
            APP_SECRET:
            DEFAULT_LOCALE:
            SERVICE_NAME:
            DATABASE_URL: pgsql://postgres:@db:5432/postgres
            ASSETS_URI: http://localhost:8081/bucket/
            ASSETS_PATH: /app/var/assets/
            S3_ENDPOINT: http://s3:9000
            S3_KEY: *S3Key
            S3_SECRET: *S3Secret
            S3_REGION: region
            S3_BUCKET: bucket
        command: >
            sh -c '
                while ! nc db 5432; do sleep 1; done
                bin/console doctrine:migrations:migrate --no-interaction
                php-fpm
            '
        volumes:
            - assets:/app/var/assets/
        image: libero/content-store:${IMAGE_TAG:-master}
        depends_on:
            - db
            - s3
    web:
        image: nginx:1.15.8-alpine
        volumes:
            - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf
            - assets:/app/public/assets/
        ports:
            - 8080:80
        depends_on:
            - app

volumes:
    assets:
